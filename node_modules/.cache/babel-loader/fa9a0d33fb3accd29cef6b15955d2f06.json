{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\feinv\\\\OneDrive\\\\Escritorio\\\\pruebamer\\\\src\\\\components\\\\Comments\\\\content.jsx\";\nimport React from \"react\";\nimport { Grid, Row, Col } from 'react-flexbox-grid';\nimport { connect } from 'react-redux';\nimport { openModal, addReaction } from '../../redux/actions';\nimport { handleDate } from '../../helpers';\nimport Comment from './comments';\nimport './styles.scss';\nimport imageProfile from '../../resources/image/profile.png';\nimport imglike from \"../../resources/image/like.svg\";\nimport imgcomment from \"../../resources/image/comments.svg\";\n\nconst Publication = props => {\n  const addComment = postId => {\n    props.openModal(postId);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, props.posts.map(post => {\n    const date = handleDate(post.date);\n    return React.createElement(\"div\", {\n      className: \"post-content\",\n      key: post.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      fluid: true,\n      className: \"post\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 2,\n      md: 1,\n      className: \"img-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"image\",\n      src: imageProfile,\n      alt: \"Profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    })), React.createElement(Col, {\n      xs: 10,\n      md: 11,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(Col, {\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"post-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, post.name), React.createElement(\"p\", {\n      className: \"post-date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, date))), React.createElement(Col, {\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \" \", post.text, \" \")), React.createElement(Col, {\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"actions-post\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"button-post\",\n      onClick: () => props.addReaction(post.id),\n      disabled: props.name === \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"img-like\",\n      src: imglike,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), \"Reaccionar\"), React.createElement(\"button\", {\n      className: \"button-post\",\n      onClick: () => addComment(post.id),\n      disabled: props.name === \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"img-like\",\n      src: imgcomment,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), \"Comentar\"))))))), React.createElement(Comment, {\n      comments: post.comments,\n      reactions: post.reactions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }));\n  }));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    name: state.name\n  };\n}\n\nexport default connect(mapStateToProps, {\n  openModal,\n  addReaction\n})(Publication);","map":{"version":3,"sources":["C:\\Users\\feinv\\OneDrive\\Escritorio\\pruebamer\\src\\components\\Comments\\content.jsx"],"names":["React","Grid","Row","Col","connect","openModal","addReaction","handleDate","Comment","imageProfile","Publication","props","addComment","postId","posts","map","post","date","id","name","text","imglike","imgcomment","comments","reactions","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Grid, Row, Col } from 'react-flexbox-grid';\r\nimport { connect } from 'react-redux';\r\nimport { openModal, addReaction } from '../../redux/actions';\r\nimport { handleDate } from '../../helpers';\r\nimport Comment from './comments';\r\nimport './styles.scss';\r\nimport imageProfile from '../../resources/image/profile.png';\r\nimport imglike from '../../resources/image/like.svg'\r\nimport imgcomment from '../../resources/image/comments.svg'\r\n\r\nconst Publication = (props) => {\r\n\r\n  const addComment = (postId) => {\r\n    props.openModal(postId);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        props.posts.map(post => {\r\n          const date = handleDate(post.date);\r\n          return (\r\n            <div className=\"post-content\" key={post.id}>\r\n              <Grid fluid className=\"post\">\r\n                <Row>\r\n                  <Col xs={2} md={1} className=\"img-center\">\r\n                    <img className=\"image\" src={imageProfile} alt=\"Profile\" />\r\n                  </Col>\r\n                  <Col xs={10} md={11}>\r\n                    <Row>\r\n                      <Col xs={12}>\r\n                        <div>\r\n                          <p className=\"post-name\">\r\n                            { post.name }\r\n                          </p>\r\n                          <p className=\"post-date\">\r\n                            { date }\r\n                          </p>\r\n                        </div>\r\n                      </Col>\r\n                      <Col xs={12}>\r\n                        <div> {post.text} </div>\r\n                      </Col>\r\n                      <Col xs={12}>\r\n                        <div className=\"actions-post\">\r\n                          <button\r\n                            className=\"button-post\" \r\n                            onClick={() => props.addReaction(post.id)}\r\n                            disabled={props.name === \"\"}\r\n                          ><img className=\"img-like\" src={imglike} alt=\"\"/> \r\n                            Reaccionar\r\n                          </button>\r\n                          <button \r\n                            className=\"button-post\" \r\n                            onClick={() => addComment(post.id)}\r\n                            disabled={props.name === \"\"}\r\n                          >\r\n                            <img className=\"img-like\" src={imgcomment} alt=\"\"/> \r\n                            Comentar\r\n                          </button>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                </Row>\r\n              </Grid>\r\n              <Comment comments={post.comments} reactions={post.reactions} />\r\n            </div>\r\n          );\r\n        })\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    name: state.name\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, { openModal, addReaction })(Publication);\r\n"]},"metadata":{},"sourceType":"module"}