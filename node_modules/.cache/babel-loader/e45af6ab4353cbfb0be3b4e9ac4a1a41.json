{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\feinv\\\\OneDrive\\\\Escritorio\\\\pruebamer\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ADD_POST, ADD_COMMENT, ADD_REACTION } from '../actions/actionTypes';\nconst initialState = {\n  publications: []\n};\n\nfunction reducer(state = initialState, {\n  type,\n  payload\n}) {\n  switch (type) {\n    case ADD_POST:\n      {\n        if (payload.text !== \"\") {\n          const publications = state.publications;\n          const post = [...publications, _objectSpread({}, payload)];\n          return {\n            publications: post\n          };\n        } else {\n          return state;\n        }\n      }\n\n    case ADD_COMMENT:\n      {\n        const id = payload.id,\n              name = payload.name,\n              date = payload.date,\n              text = payload.text,\n              postId = payload.postId;\n\n        if (text !== \"\") {\n          const publications = state.publications;\n          const index = publications.findIndex(value => {\n            return value.id === postId;\n          });\n          const post = publications[index];\n          post.comments.push({\n            id,\n            name,\n            date,\n            text\n          });\n          const data = [...publications.slice(0, index), Object.assign({}, publications[index], _objectSpread({}, post)), ...publications.slice(index + 1)];\n          return {\n            publications: data\n          };\n        } else {\n          return state;\n        }\n      }\n\n    case ADD_REACTION:\n      {\n        const publications = state.publications;\n        const index = publications.findIndex(value => {\n          return value.id === payload.postId;\n        });\n        const post = publications[index];\n        const reactions = post.reactions;\n        post.reactions = reactions + 1;\n        const data = [...publications.slice(0, index), Object.assign({}, publications[index], _objectSpread({}, post)), ...publications.slice(index + 1)];\n        return {\n          publications: data\n        };\n      }\n\n    default:\n      return state;\n  }\n}\n\nexport default reducer;","map":{"version":3,"sources":["C:\\Users\\feinv\\OneDrive\\Escritorio\\pruebamer\\src\\redux\\reducers\\addPost.js"],"names":["ADD_POST","ADD_COMMENT","ADD_REACTION","initialState","publications","reducer","state","type","payload","text","post","id","name","date","postId","index","findIndex","value","comments","push","data","slice","Object","assign","reactions"],"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,YAAhC,QAAoD,wBAApD;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,YAAY,EAAE;AADK,CAArB;;AAIA,SAASC,OAAT,CAAiBC,KAAK,GAAGH,YAAzB,EAAuC;AAAEI,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAvC,EAA0D;AACxD,UAAQD,IAAR;AACE,SAAKP,QAAL;AAAe;AACb,YAAIQ,OAAO,CAACC,IAAR,KAAiB,EAArB,EAAyB;AAAA,gBACfL,YADe,GACEE,KADF,CACfF,YADe;AAEvB,gBAAMM,IAAI,GAAG,CACX,GAAGN,YADQ,oBAGNI,OAHM,EAAb;AAMA,iBAAO;AACLJ,YAAAA,YAAY,EAAEM;AADT,WAAP;AAGD,SAXD,MAWO;AACL,iBAAOJ,KAAP;AACD;AACF;;AACD,SAAKL,WAAL;AAAkB;AAAA,cACRU,EADQ,GACyBH,OADzB,CACRG,EADQ;AAAA,cACJC,IADI,GACyBJ,OADzB,CACJI,IADI;AAAA,cACEC,IADF,GACyBL,OADzB,CACEK,IADF;AAAA,cACQJ,IADR,GACyBD,OADzB,CACQC,IADR;AAAA,cACcK,MADd,GACyBN,OADzB,CACcM,MADd;;AAEhB,YAAIL,IAAI,KAAK,EAAb,EAAiB;AAAA,gBACPL,YADO,GACUE,KADV,CACPF,YADO;AAEf,gBAAMW,KAAK,GAAGX,YAAY,CAACY,SAAb,CAAuBC,KAAK,IAAI;AAC5C,mBAAOA,KAAK,CAACN,EAAN,KAAaG,MAApB;AACD,WAFa,CAAd;AAGA,gBAAMJ,IAAI,GAAGN,YAAY,CAACW,KAAD,CAAzB;AACAL,UAAAA,IAAI,CAACQ,QAAL,CAAcC,IAAd,CAAmB;AAAER,YAAAA,EAAF;AAAMC,YAAAA,IAAN;AAAYC,YAAAA,IAAZ;AAAkBJ,YAAAA;AAAlB,WAAnB;AACA,gBAAMW,IAAI,GAAG,CACX,GAAGhB,YAAY,CAACiB,KAAb,CAAmB,CAAnB,EAAsBN,KAAtB,CADQ,EAEXO,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBnB,YAAY,CAACW,KAAD,CAA9B,oBACKL,IADL,EAFW,EAKX,GAAGN,YAAY,CAACiB,KAAb,CAAmBN,KAAK,GAAG,CAA3B,CALQ,CAAb;AAOA,iBAAO;AACLX,YAAAA,YAAY,EAAEgB;AADT,WAAP;AAGD,SAjBD,MAiBO;AACL,iBAAOd,KAAP;AACD;AACF;;AACD,SAAKJ,YAAL;AAAmB;AAAA,cACTE,YADS,GACQE,KADR,CACTF,YADS;AAEjB,cAAMW,KAAK,GAAGX,YAAY,CAACY,SAAb,CAAuBC,KAAK,IAAI;AAC5C,iBAAOA,KAAK,CAACN,EAAN,KAAaH,OAAO,CAACM,MAA5B;AACD,SAFa,CAAd;AAGA,cAAMJ,IAAI,GAAGN,YAAY,CAACW,KAAD,CAAzB;AALiB,cAMTS,SANS,GAMKd,IANL,CAMTc,SANS;AAOjBd,QAAAA,IAAI,CAACc,SAAL,GAAiBA,SAAS,GAAG,CAA7B;AACA,cAAMJ,IAAI,GAAG,CACX,GAAGhB,YAAY,CAACiB,KAAb,CAAmB,CAAnB,EAAsBN,KAAtB,CADQ,EAEXO,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBnB,YAAY,CAACW,KAAD,CAA9B,oBACKL,IADL,EAFW,EAKX,GAAGN,YAAY,CAACiB,KAAb,CAAmBN,KAAK,GAAG,CAA3B,CALQ,CAAb;AAOA,eAAO;AACLX,UAAAA,YAAY,EAAEgB;AADT,SAAP;AAGD;;AACD;AACE,aAAOd,KAAP;AA5DJ;AA8DD;;AAED,eAAeD,OAAf","sourcesContent":["import { ADD_POST, ADD_COMMENT, ADD_REACTION } from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n  publications: []\r\n};\r\n\r\nfunction reducer(state = initialState, { type, payload }) {\r\n  switch (type) {\r\n    case ADD_POST: {\r\n      if (payload.text !== \"\") {\r\n        const { publications } = state;\r\n        const post = [\r\n          ...publications,\r\n          {\r\n            ...payload\r\n          }\r\n        ];\r\n        return {\r\n          publications: post\r\n        };\r\n      } else {\r\n        return state;\r\n      }\r\n    }\r\n    case ADD_COMMENT: {\r\n      const { id, name, date, text, postId } = payload;\r\n      if (text !== \"\") {\r\n        const { publications } = state;\r\n        const index = publications.findIndex(value => {\r\n          return value.id === postId;\r\n        });\r\n        const post = publications[index];\r\n        post.comments.push({ id, name, date, text });\r\n        const data = [\r\n          ...publications.slice(0, index),\r\n          Object.assign({}, publications[index], {\r\n            ...post\r\n          }),\r\n          ...publications.slice(index + 1)\r\n        ];\r\n        return {\r\n          publications: data\r\n        };\r\n      } else {\r\n        return state;\r\n      }\r\n    }\r\n    case ADD_REACTION: {\r\n      const { publications } = state;\r\n      const index = publications.findIndex(value => {\r\n        return value.id === payload.postId;\r\n      });\r\n      const post = publications[index];\r\n      const { reactions } = post;\r\n      post.reactions = reactions + 1;\r\n      const data = [\r\n        ...publications.slice(0, index),\r\n        Object.assign({}, publications[index], {\r\n          ...post\r\n        }),\r\n        ...publications.slice(index + 1)\r\n      ];\r\n      return {\r\n        publications: data\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}