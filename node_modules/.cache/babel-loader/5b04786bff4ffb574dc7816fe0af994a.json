{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\feinv\\\\OneDrive\\\\Escritorio\\\\pruebamer\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ADD_POST, ADD_COMMENT, ADD_REACTION, OPEN_MODAL, CLOSE_MODAL, ADD_NAME } from './actionTypes';\nlet nextPostId = 2;\nlet nextCommentId = 3;\nexport const addPost = content => ({\n  type: ADD_POST,\n  payload: _objectSpread({\n    id: ++nextPostId\n  }, content, {\n    reactions: 0,\n    comments: []\n  })\n});\nexport const addComment = (postId, content) => ({\n  type: ADD_COMMENT,\n  payload: _objectSpread({\n    id: ++nextCommentId,\n    postId\n  }, content)\n});\nexport const addReaction = postId => ({\n  type: ADD_REACTION,\n  payload: {\n    postId\n  }\n});\nexport const openModal = postId => ({\n  type: OPEN_MODAL,\n  payload: {\n    postId\n  }\n});\nexport const closeModal = () => ({\n  type: CLOSE_MODAL,\n  payload: {\n    postId: null\n  }\n});\nexport const addName = name => ({\n  type: ADD_NAME,\n  payload: {\n    name\n  }\n});","map":{"version":3,"sources":["C:\\Users\\feinv\\OneDrive\\Escritorio\\pruebamer\\src\\redux\\actions\\index.js"],"names":["ADD_POST","ADD_COMMENT","ADD_REACTION","OPEN_MODAL","CLOSE_MODAL","ADD_NAME","nextPostId","nextCommentId","addPost","content","type","payload","id","reactions","comments","addComment","postId","addReaction","openModal","closeModal","addName","name"],"mappings":";;;;;;AAAA,SACEA,QADF,EAEEC,WAFF,EAGEC,YAHF,EAIEC,UAJF,EAKEC,WALF,EAMEC,QANF,QAOO,eAPP;AASA,IAAIC,UAAU,GAAG,CAAjB;AACA,IAAIC,aAAa,GAAG,CAApB;AAEA,OAAO,MAAMC,OAAO,GAAGC,OAAO,KAAK;AACjCC,EAAAA,IAAI,EAAEV,QAD2B;AAEjCW,EAAAA,OAAO;AACLC,IAAAA,EAAE,EAAE,EAAEN;AADD,KAEFG,OAFE;AAGLI,IAAAA,SAAS,EAAE,CAHN;AAILC,IAAAA,QAAQ,EAAE;AAJL;AAF0B,CAAL,CAAvB;AAUP,OAAO,MAAMC,UAAU,GAAG,CAACC,MAAD,EAASP,OAAT,MAAsB;AAC9CC,EAAAA,IAAI,EAAET,WADwC;AAE9CU,EAAAA,OAAO;AACLC,IAAAA,EAAE,EAAE,EAAEL,aADD;AAELS,IAAAA;AAFK,KAGFP,OAHE;AAFuC,CAAtB,CAAnB;AASP,OAAO,MAAMQ,WAAW,GAAID,MAAD,KAAa;AACtCN,EAAAA,IAAI,EAAER,YADgC;AAEtCS,EAAAA,OAAO,EAAE;AACPK,IAAAA;AADO;AAF6B,CAAb,CAApB;AAOP,OAAO,MAAME,SAAS,GAAIF,MAAD,KAAa;AACpCN,EAAAA,IAAI,EAAEP,UAD8B;AAEpCQ,EAAAA,OAAO,EAAE;AACPK,IAAAA;AADO;AAF2B,CAAb,CAAlB;AAOP,OAAO,MAAMG,UAAU,GAAG,OAAO;AAC/BT,EAAAA,IAAI,EAAEN,WADyB;AAE/BO,EAAAA,OAAO,EAAE;AACPK,IAAAA,MAAM,EAAE;AADD;AAFsB,CAAP,CAAnB;AAOP,OAAO,MAAMI,OAAO,GAAIC,IAAD,KAAW;AAChCX,EAAAA,IAAI,EAAEL,QAD0B;AAEhCM,EAAAA,OAAO,EAAE;AACPU,IAAAA;AADO;AAFuB,CAAX,CAAhB","sourcesContent":["import { \r\n  ADD_POST, \r\n  ADD_COMMENT,\r\n  ADD_REACTION, \r\n  OPEN_MODAL, \r\n  CLOSE_MODAL, \r\n  ADD_NAME\r\n} from './actionTypes';\r\n\r\nlet nextPostId = 2;\r\nlet nextCommentId = 3;\r\n\r\nexport const addPost = content => ({\r\n  type: ADD_POST,\r\n  payload: {\r\n    id: ++nextPostId,\r\n    ...content,\r\n    reactions: 0,\r\n    comments: []\r\n  }\r\n});\r\n\r\nexport const addComment = (postId, content) => ({\r\n  type: ADD_COMMENT,\r\n  payload: {\r\n    id: ++nextCommentId,\r\n    postId,\r\n    ...content\r\n  }\r\n});\r\n\r\nexport const addReaction = (postId) => ({\r\n  type: ADD_REACTION,\r\n  payload: {\r\n    postId\r\n  }\r\n});\r\n\r\nexport const openModal = (postId) => ({\r\n  type: OPEN_MODAL,\r\n  payload: {\r\n    postId\r\n  }\r\n});\r\n\r\nexport const closeModal = () => ({\r\n  type: CLOSE_MODAL,\r\n  payload: {\r\n    postId: null\r\n  }\r\n});\r\n\r\nexport const addName = (name) => ({\r\n  type: ADD_NAME,\r\n  payload: {\r\n    name\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}